var feUI = feUI || {};
!function(e, t, a, n, i) {
    "use strict";
    var o, r, d, l = t(a), s = t(n), c = t.browser.mobile ? t("html").addClass("activeJS disableOutline isMobile") : t("html").addClass("activeJS disableOutline"), f = s.find("body").on({
        keydown: function(e) {
            9 === e.keyCode && c.removeClass("disableOutline")
        },
        keyup: function(e) {
            13 === e.keyCode && c.removeClass("disableOutline")
        },
        click: function() {
            c.addClass("disableOutline")
        }
    }), h = f.find("#wrap").append('<div class="dimmedLayer"></div>'), g = h.find(".noGnbLayer").length || h.find(".blogContent").length ? h.find("#header") : h.find("#header").append('<div class="gnbLayerBg"></div>'), p = g.find("h1"), u = h.find(".blogContent").length ? h.find(".blogMenu").append('<div class="gnbBg"></div>') : g.find("#gnb").append('<div class="gnbBg"></div>'), v = f.find(".contTopBar"), m = f.find("#content"), y = f.find("#aside"), b = f.find("#footer"), k = h.find(".dimmedLayer"), M = l.width(), C = l.height(), $ = l.scrollTop(), L = g.outerHeight(), x = u.height(), I = c.is('[lang="ko"]') ? "/asset" : "/global/asset", T = "active", D = "current", S = parseInt(h.css("minWidth")), B = M > S, w = !1, E = !1, W = c.is("[class*=MobView]");
    k.css("opacity", .7),
        t.datepicker.setDefaults({
            dateFormat: "yy-mm-dd",
            prevText: "이전 달",
            nextText: "다음 달",
            dayNames: ["일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일"],
            dayNamesMin: ["일", "월", "화", "수", "목", "금", "토"],
            monthNames: ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"],
            yearSuffix: "",
            showOtherMonths: !0,
            showMonthAfterYear: !0
        }),
        e.datepickerScope = function(e) {
            var t = e || "달력";
            s.find(".ui-datepicker-calendar").prepend("<caption>" + t + "</caption>").find("th").attr("scope", "col")
        }
        ,
        e.setOldIE = function() {
            var e = a.navigator.userAgent
                , t = e.match(/MSIE (\d+)/)
                , n = e.match(/Trident\/(\d+)/)
                , i = {
                isIE: !1,
                trueVer: 0,
                activeVer: 0,
                cpMode: !1
            };
            return n && (i.isIE = !0,
                o = i.trueVer = parseInt(n[1], 10) + 4),
                t ? (i.isIE = !0,
                    o = i.activeVer = parseInt(t[1])) : i.activeVer = i.trueVer,
            i.isIE && i.activeVer < 8 && i.trueVer < 9 && (i.cpMode = i.trueVer !== i.activeVer),
            i.isIE && i.activeVer < 7 && (a.location = "http://windows.microsoft.com/ko-kr/internet-explorer/download-ie"),
            i.isIE && (c.addClass("ie" + i.activeVer + "Only"),
            i.trueVer < 9 && c.addClass("ie" + i.trueVer + "Origin")),
            (!i.isIE || i.activeVer > 8) && c.addClass("mdBrowser"),
                i.cpMode ? c.addClass("cpMode") : c.removeClass("cpMode"),
                i
        }
        ,
        e.setOldIE(),
        e.setSkipToContent = function() {
            var e = f.find("a.skipToContent")
                , a = e.attr("href");
            if (!e.length)
                return !1;
            m.length || e.hide(),
                e.on("click", function(e) {
                    e.preventDefault(),
                        t(a).attr("tabindex", 0).focus().on("keydown", function(e) {
                            9 === e.keyCode && t(this).removeAttr("tabindex")
                        })
                })
        }
        ,
        e.setSkipToContent(),
        e.createCookie = function(e, t, a) {
            var i;
            if (a) {
                var o = new Date;
                o.setTime(o.getTime() + 24 * a * 60 * 60 * 1e3),
                    i = "; expires=" + o.toGMTString()
            } else
                i = "";
            n.cookie = e + "=" + t + i + "; path=/"
        }
        ,
        e.getCookie = function(e) {
            for (var t = e + "=", a = n.cookie.split(";"), i = 0; i < a.length; i++) {
                for (var o = a[i]; " " == o.charAt(0); )
                    o = o.substring(1, o.length);
                if (0 == o.indexOf(t))
                    return o.substring(t.length, o.length)
            }
            return null
        }
        ,
        e.deleteCookie = function(t) {
            e.createCookie(t, "", -1)
        }
        ,
        e.stringToFunc = function(e) {
            for (var t = a, n = e.split("."), i = 0; i < n.length - 1; i++)
                if (void 0 === (t = t[n[i]]))
                    return;
            return t[n[n.length - 1]]
        }
        ,
        e.saveHTMLTemplate = function(e) {
            var a = m.find(".addFormField[data-form-group]");
            return !!a.length && (d = d || {},
                a.each(function() {
                    var e = t(this)
                        , a = e.data("form-group");
                    if (d[a])
                        return !0;
                    d[a] = t("<div />").append(e.clone()).html()
                }),
                0 !== arguments.length ? d[e] : void 0)
        }
        ,
        e.saveHTMLTemplate(),
        e.cssPseudoEl = function() {
            var e = t(".clearFix, .feSlNavi button, .b")
                , a = t(".clearFix, .feFoSelect, .a, \t\t\t\t.rsvClinicList .feSlItem label span");
            if (!e.length && !a.length)
                return !1;
            o < 8 ? (e.length && e.each(function() {
                t(this).find("> ins.b").remove().end().prepend('<ins class="b" />')
            }),
            a.length && a.each(function() {
                t(this).find("> ins.a").remove().end().append('<ins class="a" />')
            })) : (e.removeClass("b"),
                a.removeClass("a"))
        }
        ,
        e.cssPseudoEl(),
        e.disableInvalid = function() {
            var e = m.find("[required]");
            if (!e.length)
                return !1;
            e.on("invalid", function(e) {
                e.preventDefault()
            })
        }
        ,
        e.disableInvalid(),
        e.setDocTitle = function() {
            var e = m.find(".doctorInfo .name")
                , a = c.is('[lang="ko"]') ? e.find("strong").text() : e.find("em").text()
                , n = e.find("span").text()
                , i = c.is('[lang="ko"]') ? a + " " + n + " 블로그 | " : a + " Blog | "
                , o = e.length ? i + s.attr("title") : s.attr("title")
                , r = e.length ? m.find(".blogCont h2:first").not("nav h2").text() : m.find("h2:first").not("nav h2").text()
                , d = m.find(".boardView .viewTitle > :first-child").text()
                , l = t.trim(d).length ? t.trim(r).length ? r + "(" + d + ") | " + o : d + " | " + o : t.trim(r).length ? r + " | " + o : o;
            m.hasClass("bodyBg") && c.addClass("bodyBg"),
                t.trim(r) != t.trim(o) && "서울대학교병원 인트로" != t.trim(o) ? m.hasClass("mainContent") ? c.addClass("mainContent") : s.attr("title", l) : s.attr("title", o)
        }
        ,
        e.setDocTitle(),
        e.setStyleClass = function() {
            var t = m.find(".boardTypeImg01, .rsvDoctorList ul, .posting, .newsList")
                , a = m.find(".academicList a")
                , n = m.find(".boardTypeImg02 li, .cstBoardCard .item")
                , i = m.find(".newsPaperImg .itemWrap a, \t\t\t\t.clinicTeamList .listItem a, .medicalTeamList .teamList02 div, \t\t\t\t.healthList .item, .boardTypeImg03 li");
            if (!(t.length || a.length || n.length || i.length))
                return !1;
            o < 9 && (t.find("li:nth-child(odd)").addClass("odd").end().find("li:nth-child(even)").addClass("even"),
                a.filter(":nth-child(odd)").addClass("odd").end().filter(":nth-child(even)").addClass("even"),
                n.filter(":nth-child(3n)").addClass("nthChild3n"),
                i.filter(":nth-child(4n)").addClass("nthChild4n")),
            o < 8 && t.filter(".rsvDoctorList ul").length && t.filter(".rsvDoctorList ul").find("li:not(:first-child):nth-child(odd)").addClass("a"),
                e.cssPseudoEl()
        }
        ,
        e.setStyleClass(),
        e.setFormEl = function() {
            var a = h.find(":radio, :checkbox, :file")
                , n = t(".hideEl, .originType, .rsvTime, .fileTxt :file");
            if (!a.length)
                return !1;
            a.not(n).feForm(),
                e.cssPseudoEl()
        }
        ,
        e.setFormEl(),
        e.clinicItemWrap = function() {
            var e = m.find(".rsvClinicList");
            if (!e.length)
                return !1;
            e.each(function() {
                var e = t(this)
                    , a = e.find("label")
                    , n = [];
                if (e.find(".feSlItem").length)
                    return !0;
                t.map(a, function(e, t) {
                    t % 12 == 0 && n.push(t)
                }),
                    t.each(n, function(e, t) {
                        a.slice(t, t + 12).wrapAll('<div class="feSlItem"></div>')
                    })
            })
        }
        ,
        e.clinicItemWrap(),
        e.rsvToggleList = function() {
            var e = m.find(".rsvDoctorWrap")
                , a = e.find(".btnThumb, .btnList")
                , n = e.find(".rsvDoctorList");
            if (!e.length)
                return !1;
            a.on("click", function() {
                var e = t(this);
                if (e.hasClass(T))
                    return !1;
                a.not(e).removeClass(T),
                    e.addClass(T),
                    e.is(".btnList") ? n.find("ul").addClass("rsvCatalog") : n.find("ul").removeClass("rsvCatalog")
            })
        }
        ,
        e.rsvToggleList(),
        e.rsvDoctorBtn = function() {
            var a = m.find(".rsvDoctorInfo")
                , n = a.find("button");
            if (!a.length)
                return !1;
            e.setStyleClass(),
            o < 9 && n.each(function() {
                var e = t(this);
                e.attr({
                    role: "switch",
                    "aria-checked": !1
                }),
                e.prop("disabled") && e.addClass("disabled")
            }),
                a.off().on("click", "button", function(n) {
                    var i, o, r, d = t(this), l = d.closest(a), s = d.siblings(".thumb");
                    if (d.is(":disabled, .disabled"))
                        return !1;
                    (i = l.find(".info").find(".name")).find("span"),
                        o = t.trim(i.text().replace(" ", "").replace("블로그", "")),
                        r = i.siblings(".checkUp").length ? 1 : 0,
                        d.hasClass("checked") ? (d.attr("aria-checked", !1),
                            d.add(s).removeClass("checked"),
                            e.rsvInfoMethod.doctorInfo("reset")) : (a.find("> .checked").attr("aria-checked", !1).removeClass("checked"),
                            d.attr("aria-checked", !0),
                            d.add(s).addClass("checked"),
                            e.rsvInfoMethod.doctorInfo(o, r))
                }),
                a.on("click", function(e) {
                    var a = t(this)
                        , i = a.find(n);
                    return "button" === t(e.target).prop("type") || !i.is(":disabled") && !i.is(".disabled") && void a.find(n).trigger("click")
                })
        }
        ,
        e.rsvDoctorBtn(),
        e.rsvResetClinic = function(t, a) {
            var n = e.schDateMethod.tgEl
                , i = m.find(".rsvClinicWrap")
                , o = n.isMainRsvLayer ? h.find(".layerRsvCheck .colWrap:eq(0) div:eq(0)") : i.find(".contTabWrap")
                , r = n.isMainRsvLayer ? o.find(":radio") : o.find("a")
                , d = r.eq(t - 1)
                , l = i.find(':radio[value="' + a + '"]')
                , s = l.closest(".feSlMask")
                , c = l.closest(".feSlItem")
                , f = s.siblings(".feSlPaging")
                , g = s.find(".feSlItem").index(c);
            if (n.isMainRsvLayer)
                void 0 !== t && "" !== t && (d.prop("checked", !0).trigger("feChange"),
                    r.trigger("feChange")),
                void 0 !== a && "" !== a && n.$rsvClinicSelect.find("option[value=" + a + "]").prop("selected", !0).trigger("feChange");
            else {
                if (!i.length)
                    return !1;
                e.rsvInfoMethod.resetInfo(),
                void 0 !== t && "" !== t && d.trigger("feClick"),
                void 0 !== a && "" !== a && (l.trigger("click"),
                0 !== g && f.find("a:eq(" + g + ")").trigger("feClick"))
            }
        }
        ,
        e.rsvResetDoctor = function(t) {
            var a = e.schDateMethod.tgEl
                , n = m.find("button[data-docid]");
            if (a.isMainRsvLayer)
                a.$rsvDoctorSelect.find("option[value=" + t + "]").prop("selected", !0).trigger("change");
            else {
                if (void 0 === t || !n.length)
                    return !1;
                n.filter('[data-docid="' + t + '"]').trigger("click")
            }
        }
        ,
        e.rsvResetDate = function(t, a) {
            var n, i, o, r, d, l = e.schDateMethod.tgEl, s = h.find(".rsvSchedule .calendar");
            void 0 !== t && "" !== t && (i = t.slice(0, 4) + "-" + t.slice(4, 6) + "-" + (n = t.slice(6, 8)),
                s.datepicker("setDate", i).find("a:contains(" + parseInt(n) + ")").trigger("click")),
            void 0 !== a && "" !== a && (o = a.slice(0, 2),
                r = a.slice(2, 4),
                d = o + ":" + r,
                setTimeout(function() {
                    l.isMainRsvLayer ? l.$time.find("option[value=" + a + "]").prop("selected", !0).trigger("change") : h.find(".rsvTime").filter('[title="' + d + '"]').trigger("click")
                }))
        }
        ,
        e.rsvToggleBordr = function(e) {
            var t = m.find(".rsvClinicWrap")
                , a = m.find(".rsvDoctorWrap")
                , n = m.find(".rsvSchedule .calendarWrap")
                , i = m.find(".rsvSchedule .time");
            if (!m.hasClass("rsvCheckup"))
                return !1;
            t.add(a).add(n).add(i).removeClass(D),
                "clinic" === e ? t.addClass(D) : "doctor" === e ? a.addClass(D) : "date" === e ? n.addClass(D) : "time" === e && i.addClass(D)
        }
        ,
        e.fileTxtInp = function() {
            var e = m.find(".fileTxt")
                , t = e.find(":file");
            if (!e.length)
                return !1;
            t.feForm({
                afterChange: function(e, t, a) {
                    var n = t.siblings("span");
                    a.val().length ? n.hide() : n.show()
                }
            })
        }
        ,
        e.fileTxtInp(),
        e.setContTab = function() {
            var e = h.find(".contTabType")
                , a = e.find("ul")
                , n = h.find(".contTabWrap, .clinicWrap, .mainTab")
                , i = m.find(".clinicTab ul");
            if (!e.length && !n.length && !i.length)
                return !1;
            n.each(function() {
                var e = t(this)
                    , a = e.data("pannel");
                e.closest(".rsvClinicWrap").length ? e.feTab({
                    startPannel: 0
                }) : e.feTab({
                    startPannel: a
                })
            }),
                a.each(function() {
                    var e = t(this)
                        , a = e.data("pannel");
                    void 0 === a ? e.feTab() : e.feTab({
                        startPannel: a
                    })
                }),
                i.each(function() {
                    var e = t(this);
                    if (!e.closest(".clinicTab").siblings("div").length)
                        return !0;
                    e.feTab({
                        toggleEvent: !0,
                        startPannel: 0,
                        tabGroup: "clinic"
                    })
                })
        }
        ,
        e.setContTab(),
        e.setSlideEl = function() {
            var a = m.find(".slideWrap:not(.rsvClinicList)")
                , n = m.find(".slideWrapPg, .mainIssue")
                , i = m.find(".doctorSlide")
                , o = m.find(".mainVisual")
                , r = m.find(".rsvClinicList.slideWrap")
                , d = h.find(".setSlidePaging");
            if (!(a.length || n.length || i.length || o.length || r.length))
                return !1;
            function l(e) {
                if (!n.siblings(".numWrap"))
                    return !1;
                n.each(function() {
                    var a = t(this)
                        , n = a.siblings(".numWrap")
                        , i = n.find("em")
                        , o = n.find("span")
                        , r = a.find(".feSlItem");
                    0 === e && o.text(r.length),
                        i.text(r.index(r.filter("." + D)) + 1)
                })
            }
            a.feSlide({
                aniSpeed: 500,
                pagingBtn: !1
            }),
                n.feSlide({
                    afterAnimate: l
                }),
                i.feSlide({
                    fadeEffect: !0,
                    aniSpeed: 500
                }),
                o.feSlide({
                    autoPlay: !0,
                    playSpeed: 5e3,
                    fixedLayout: !1
                }),
            r.length && r.each(function() {
                var e = t(this)
                    , a = e.attr("id");
                e.feSlide({
                    aniSpeed: 500,
                    pagingBtn: !0,
                    itemIdPrefix: "feSlItem-" + a
                })
            }),
            d.length && d.each(function() {
                var e = t(this)
                    , a = e.find(".feSlPaging")
                    , n = e.find(".btnAuto, .btnStop");
                a.append(n).find("button").wrapAll("<li></li>")
            }),
                l(0),
                e.cssPseudoEl()
        }
        ,
        e.setSlideEl(),
        e.setFAQList = function() {
            var e = m.find(".faqList");
            if (!e.length)
                return !1;
            e.feFAQ()
        }
        ,
        e.setFAQList(),
        e.focusRotation = function(e, a, n) {
            var i = a
                , o = i.find(":focusable:first")
                , r = i.find(":focusable:last");
            i.attr("tabindex", 0).focus().on("keydown", function(i) {
                var d = t(this);
                t(i.target).is(a) && (9 === i.keyCode && i.shiftKey ? (i.preventDefault(),
                    d.removeAttr("tabindex"),
                    a.is("[class*=totMenuLayer]") ? t(e).focus() : n ? n.focus() : r.focus()) : 9 !== i.keyCode || i.shiftKey || (i.preventDefault(),
                    d.removeAttr("tabindex"),
                    o.focus()))
            }),
                o.off("keydown").on("keydown", function(t) {
                    9 === t.keyCode && t.shiftKey && (t.preventDefault(),
                        a.is("[class*=totMenuLayer]") ? e.focus() : n ? n.focus() : r.focus()),
                    9 === t.keyCode && !t.shiftKey && o.is(r) && t.preventDefault()
                }),
                r.off("keydown").on("keydown", function(t) {
                    9 !== t.keyCode || t.shiftKey || (t.preventDefault(),
                        a.is("[class*=totMenuLayer]") ? e.focus() : n ? n.focus() : o.focus()),
                    9 === t.keyCode && t.shiftKey && o.is(r) && t.preventDefault()
                })
        }
        ,
        e.setPlaceholder = function() {
            var e = t("[placeholder]");
            if (void 0 !== n.createElement("input").placeholder)
                return !1;
            o < 10 && e.each(function() {
                var e = t(this)
                    , a = e.attr("type")
                    , n = e.attr("placeholder");
                o > 8 && "password" === a && e.attr("type", "text"),
                "" === e.val() && e.addClass("placeholderTxt").val(n),
                    e.on({
                        focus: function() {
                            o > 8 && "password" === a && e.attr("type", "password"),
                            e.val() === n && e.val("").removeClass("placeholderTxt")
                        },
                        focusout: function() {
                            "" === e.val() && (e.val("").addClass("placeholderTxt"),
                                o > 8 && "password" === a ? e.attr("type", "text").val(n) : e.val(n))
                        }
                    })
            })
        }
        ,
        e.setPlaceholder(),
        e.voiceService = function() {
            var a = h.find(".voiceBtnLbl")
                , n = a.find("a").attr("role", "switch");
            if (!a.length)
                return !1;
            a.on("click", "a", function(i) {
                var o = t(this).closest(a);
                i.preventDefault(),
                    o.hasClass("checked") ? (e.createCookie("vscbox", 0, 1),
                        n.attr("aria-checked", !1),
                        a.removeClass("checked")) : (e.createCookie("vscbox", 1, 1),
                        n.attr("aria-checked", !0),
                        a.addClass("checked"))
            }),
                "1" === e.getCookie("vscbox") ? a.addClass("checked").find("a").attr("aria-checked", !0) : a.removeClass("checked").find("a").attr("aria-checked", !1)
        }
        ,
        e.voiceService(),
        e.breadcrumb = function() {
            var a, n = v.find(".breadcrumb"), i = n.find(".bcLinkLayerBtn"), o = n.find(".bcLinkLayer").attr({
                role: "region",
                "aria-hidden": !0,
                "aria-expanded": !1
            });
            if (!n.length)
                return !1;
            i.on({
                click: function() {
                    var n = t(this)
                        , i = n.text().replace("열기", "닫기")
                        , r = n.text().replace("닫기", "열기");
                    a = n.siblings().filter(o),
                        n.hasClass(T) ? (a.stop().slideUp(100, function() {
                            t(this).attr({
                                "aria-hidden": !0,
                                "aria-expanded": !1
                            })
                        }),
                            n.text(r).removeClass(T)) : (a.stop().slideDown(100, function() {
                            t(this).attr({
                                "aria-hidden": !1,
                                "aria-expanded": !0
                            })
                        }),
                            n.text(i).addClass(T),
                            e.focusRotation(n, a, n))
                },
                keydown: function(e) {
                    a && !a.is(":hidden") && (9 !== e.keyCode || e.shiftKey ? 9 === e.keyCode && e.shiftKey && (e.preventDefault(),
                        a.find(":focusable:last").focus()) : (e.preventDefault(),
                        a.find(":focusable:first").focus()))
                }
            }),
                h.on("click", function(e) {
                    t(e.target).is(i) || i.filter("." + T).trigger("click")
                })
        }
        ,
        e.breadcrumb(),
        e.contRating = function() {
            var e = h.find(".contRating")
                , t = e.find(":radio")
                , a = t.filter("#ratingPoint06")
                , n = e.find(".inpTxt").prop("disabled", !0);
            if (!e.length)
                return !1;
            t.on("change", function() {
                a.prop("checked") ? n.prop("disabled", !1) : n.val("").prop("disabled", !0)
            })
        }
        ,
        e.contRating(),
        e.footerToggle = function() {
            var a, n, i, o = b.find(".ftMenuWrap"), r = o.find(".footerMenu"), d = r.find(".ftMenuList02"), l = d.find("a"), s = r.find(".ftMenuLayer").hide().css("visibility", "visible").attr({
                role: "region",
                "aria-hidden": !0,
                "aria-expanded": !1
            }), c = s.find(".layerCloseBtn"), f = g.find(".totMenuBtn"), h = o.outerHeight();
            if (!o.length)
                return !1;
            l.on("click", function(o) {
                var l = t(this);
                i = l.attr("href"),
                    a = t(i),
                    n = s.height(),
                f.hasClass(T) && f.trigger("click"),
                    o.preventDefault(),
                    d.hide(),
                    r.stop().animate({
                        height: h + n
                    }, 100),
                    s.show().attr({
                        "aria-hidden": !1,
                        "aria-expanded": !0
                    }),
                    e.focusRotation(l, a, c)
            }),
                c.on({
                    click: function() {
                        r.stop().animate({
                            height: h
                        }, 100, function() {
                            d.show()
                        }),
                            s.stop().fadeOut(100, function() {
                                t(this).attr({
                                    "aria-hidden": !0,
                                    "aria-expanded": !1
                                }),
                                    l.filter('[href="' + i + '"]').focus()
                            })
                    },
                    keydown: function(e) {
                        9 !== e.keyCode || e.shiftKey ? 9 === e.keyCode && e.shiftKey && (e.preventDefault(),
                            a.find(":focusable:last").focus()) : (e.preventDefault(),
                            a.find(":focusable:first").focus())
                    }
                })
        }
        ,
        e.footerToggle(),
        e.winPopup = function() {
            var e = f.find(".winPopup").attr("target", "_blank");
            if (!e.length)
                return !1;
            e.on("click", function(e) {
                var n = t(this)
                    , i = n.data("popup-url") ? n.data("popup-url") : n.attr("href") ? n.attr("href") : "/"
                    , o = "width=" + (n.data("popup-width") ? n.data("popup-width") : 800) + ", height=" + (n.data("popup-height") ? n.data("popup-height") : 800);
                if (e.preventDefault(),
                "/" === i)
                    return !1;
                a.open(i, "", o)
            })
        }
        ,
        e.winPopup(),
        e.setInfoBookmark = function() {
            var e = m.filter(".mediInfoCont")
                , a = m.filter(".diseaseContent")
                , n = e.find(".detailWrap h5").add(a.find(".detailWrap strong"))
                , i = e.find(".ctgBox a").add(a.find(".boxTypeGray li a"));
            if (!n.length)
                return !1;
            i.on("click", function(e) {
                var a = t(this)
                    , o = i.index(a);
                e.preventDefault(),
                    c.add(f).stop().animate({
                        scrollTop: n.eq(o).offset().top - 200
                    })
            })
        }
        ,
        e.setInfoBookmark(),
        e.galleryMaskInfo = function() {
            var e, a = m.find(".galleryMaskWrap"), n = a.find(".galleryMaskInfo").css("opacity", 0), i = n.find("button"), o = 200;
            if (!n.length)
                return !1;
            function r() {
                n.css("zIndex", 2).stop().animate({
                    opacity: 1
                }, o),
                    e.stop().fadeIn(o)
            }
            function d() {
                n.stop().animate({
                    opacity: 0
                }, o, function() {
                    t(this).css("zIndex", 0)
                }),
                    e.stop().fadeOut(o)
            }
            e || n.after('<div class="galleryDimmedLayer"></div>'),
                e = a.find(".galleryDimmedLayer").css("opacity", .5),
                a.off().on({
                    mouseenter: r,
                    mouseleave: d
                }),
                i.off().on({
                    focusin: r,
                    focusout: d
                })
        }
        ,
        e.galleryMaskInfo(),
        e.treatListLink = function() {
            var e = m.find(".medicalTeamList .treatItemWrap")
                , a = e.find(".treatLink").css({
                "z-index": 0,
                opacity: 0,
                height: 0,
                "min-height": 0
            })
                , n = 100;
            if (!e.length)
                return !1;
            function i(i) {
                var o = t(i.target).closest(e)
                    , r = o.find(a);
                "mouseenter" === i.type || "focusin" === i.type ? (o.css("z-index", 1),
                    r.css({
                        "z-index": 1,
                        height: "auto",
                        "min-height": 156
                    }).stop().animate({
                        opacity: 1
                    }, n, function() {
                        a.not(r).trigger("mouseleave")
                    })) : r.stop().animate({
                    opacity: 0
                }, n / 2, function() {
                    r.css({
                        "z-index": 0,
                        height: 0,
                        "min-height": 0
                    }),
                        o.css("z-index", 0)
                })
            }
            e.each(function() {
                var e = t(this)
                    , n = e.find(a)
                    , i = e.find("> span").html();
                n.prepend("<p>" + i + "</p>")
            }).on({
                "mouseenter focusin": function(e) {
                    e.stopPropagation(),
                        i(e)
                }
            }),
                a.on({
                    "mouseleave focusout": function(e) {
                        i(e)
                    }
                })
        }
        ,
        e.treatListLink(),
        e.btnTxtCheck = function() {
            var e = m.find(".btnTxtCheck");
            if (!e.length)
                return !1;
            e.on("click", function() {
                t(this).toggleClass(T)
            })
        }
        ,
        e.setPrintBtn = function() {
            var e = h.find(".printBtn");
            if (!e.length)
                return !1;
            e.on("click", function(e) {
                e.preventDefault(),
                    a.print()
            })
        }
        ,
        e.setPrintBtn(),
        e.blogDocSearch = function() {
            var e = g.find(".docSearchWrap").css("top", -1e3)
                , t = g.find(".docSearchBtn")
                , a = e.find(".closeBtn");
            if (!e.length)
                return !1;
            t.on("click", function() {
                k.fadeIn(150),
                    e.show().stop().animate({
                        top: 81
                    }, 150)
            }),
                a.on("click", function() {
                    k.fadeOut(150),
                        e.stop().animate({
                            top: -1e3
                        }, 150, function() {
                            e.hide()
                        })
                })
        }
        ,
        e.blogDocSearch(),
        e.floorInfoTxt = function(e, t, a) {
            var n = h.find(".locaMap.replaceImgWrap").filter('[data-rp-group="' + e + '"]')
                , i = n.find("strong:eq(0)")
                , o = n.find("strong:eq(1)");
            if (!n.length)
                return !1;
            i.text(t),
                o.text(a)
        }
        ,
        e.replaceImage = function() {
            var a = h.find(".replaceImgWrap[data-rp-group]")
                , n = h.find("[data-rp-img][data-rp-group]").not(".replaceImgBtn, option")
                , i = h.find("select").has("option[data-rp-img][data-rp-group]")
                , o = h.find(".replaceImgBtn[data-rp-group]");
            if (!a.length && !i.length)
                return !1;
            n.add(o).on("click check", function(r) {
                var d, l, s = t(this), c = s.attr("data-rp-group"), f = s.attr("data-rp-img"), h = s.is("[data-rp-alt]") ? s.attr("data-rp-alt") : s.text(), g = a.filter('[data-rp-group="' + c + '"]'), p = s.is("[data-alert]") ? s.data("alert") : "서비스 준비중입니다.";
                return r.preventDefault(),
                    s.is(o) && "click" === r.type ? (i.closest(":visible").has('[data-rp-group="' + c + '"]').trigger("change"),
                        s.trigger("check"),
                        !1) : "" === f ? (alert(p),
                        !1) : (s.hasClass(D) || (n.filter('[data-rp-group="' + c + '"]').removeClass(D),
                    s.is(n) && s.addClass(D),
                        g.show().find("img").remove().end().append('<img src="' + f + '" alt="' + h + '">')),
                        void (s.is(o) && s.is("[data-floor]") && (d = s.attr("data-clinic"),
                            l = s.attr("data-floor"),
                            e.floorInfoTxt(c, d, l))))
            }),
                i.on("change", function() {
                    var e, a, n, i = t(this), r = i.find("option:checked"), d = r.data("rp-group"), l = r.data("rp-img"), s = r.is("[data-rp-alt]") ? r.data("rp-alt") : r.text(), c = o.filter('[data-rp-group="' + d + '"]');
                    if (!i.is(":visible"))
                        return !1;
                    c.attr({
                        "data-rp-img": l,
                        "data-rp-alt": s
                    }),
                    r.is("[data-floor]") && (e = r.text(),
                        a = r.data("floor"),
                        c.attr({
                            "data-clinic": e,
                            "data-floor": a
                        })),
                    r.is("[data-alert]") && (n = r.data("alert"),
                        c.attr({
                            "data-alert": n
                        }))
                }),
                a.each(function() {
                    var e = t(this)
                        , a = e.data("rp-group");
                    if (e.find("> img").length)
                        return !0;
                    n.add(o).filter('[data-rp-group="' + a + '"]').eq(0).trigger("click")
                })
        }
        ,
        e.replaceImage(),
        e.rsvToggleInput = function() {
            var e = m.find(".rsvClinicWrap")
                , t = e.find(".btnSchOpen")
                , a = e.find(".btnSchClose")
                , n = e.find(".toggleInput");
            t.add(a).on("click", function() {
                n.toggle(),
                n.is(":visible") && n.find(":text").focus()
            })
        }
        ,
        e.rsvToggleInput(),
        e.downloadConfirm = function() {
            var e = m.filter(".identityContent").find(".layerSize01")
                , t = e.find(":checkbox");
            e.find(".downloadBtn").on("click", function(e) {
                t.prop("checked") || (e.preventDefault(),
                    alert("주의사항을 확인해주세요."))
            })
        }
        ,
        e.downloadConfirm(),
        e.tidPrint = function() {
            var e = m.find(".tinPrint");
            if (!e.length)
                return !1;
            e.on("click", function(e) {
                e.preventDefault(),
                    c.addClass("tinPrint"),
                    a.print()
            })
        }
        ,
        e.tidPrint(),
        e.toggleMainVisual = function() {
            var t = m.find(".mainVisualWrap")
                , a = t.find(".mainVisual")
                , n = t.find(".btnToggleImg")
                , i = 100;
            if (!n.length)
                return !1;
            n.on("click check", function(o) {
                i = "click" === o.type ? i : 0,
                    a.stop().slideToggle(i),
                    t.toggleClass("slideOff"),
                    t.hasClass("slideOff") ? (n.text("Open"),
                        e.createCookie("cmvisual", 0, 1)) : (n.text("Close"),
                        e.createCookie("cmvisual", 1, 1))
            }),
            "0" !== e.getCookie("cmvisual") || t.hasClass("slideOff") || n.trigger("check")
        }
        ,
        e.toggleMainVisual(),
        e.toggleMainList = function() {
            var e = m.find(".btnToggleList")
                , t = m.find(".moreList")
                , a = e.children("em");
            if (!e.length)
                return !1;
            e.on("click", function() {
                e.toggleClass("on"),
                    t.stop().slideToggle(100),
                    e.hasClass("on") ? a.text("간략보기") : a.text("전체보기")
            })
        }
        ,
        e.toggleMainList(),
        e.alertMsg = function(e) {
            var a = e || "서비스 준비중입니다.";
            h.on("click", ".alertMsg", function(e) {
                e.preventDefault();
                var n = t(this);
                n.is("[data-alert]") && (a = n.data("alert")),
                    alert(a)
            })
        }
        ,
        e.alertMsg(),
        e.thumbToggleList = function() {
            var e = m.find(".btnThumbToggle")
                , a = m.find(".thumbToggleList");
            if (!a.length)
                return !1;
            e.on("click", function() {
                t(this).closest("div").next(a).stop().slideToggle()
            })
        }
        ,
        e.thumbToggleList(),
        e.ctgToggle = function() {
            var e = s.find(".btnCtgToggle")
                , a = s.find(".ctgBox");
            if (!e.length)
                return !1;
            e.on("click", function(e) {
                var n = t(this);
                e.preventDefault(),
                    n.siblings().stop().slideToggle(),
                    n.closest(a).toggleClass(T)
            })
        }
        ,
        e.ctgToggle(),
        e.winScrollReset = function() {
            var t = h.find(".classContent .tabTypeCol5 a");
            e.getCookie("wspos") > 0 && (l.scrollTop(e.getCookie("wspos")),
                e.deleteCookie("wspos")),
                t.on("click", function() {
                    e.createCookie("wspos", $, 1)
                })
        }
        ,
        e.winScrollReset(),
        e.pcGoTopBtn = function() {
            y.find(".btnTop").on("click", function(e) {
                e.preventDefault(),
                    l.scrollTop(0)
            })
        }
        ,
        e.pcGoTopBtn(),
        e.scoreSelect = function() {
            var e = m.find(".scoreSelect");
            if (!e.length)
                return !1;
            e.on("change", function() {
                var e = t(this)
                    , a = e.closest("td").find(":text");
                "default" === e.val() ? a.prop("disabled", !1).focus() : a.prop("disabled", !0)
            })
        }
        ,
        e.scoreSelect(),
        e.checkGroupRow = function() {
            var e = f.find(".checkGroupRow")
                , a = e.find("#checkTrtAll")
                , n = e.find(":checkbox").not(a);
            if (!e.length)
                return !1;
            a.on("change", function() {
                t(this).prop("checked") ? n.prop("checked", !0).trigger("feChange") : n.prop("checked", !1).trigger("feChange")
            }),
                n.on("change", function() {
                    !t(this).prop("checked") && a.prop("checked") && a.prop("checked", !1).trigger("feChange"),
                    n.length !== n.filter(":checked").length || a.prop("checked") || a.prop("checked", !0).trigger("feChange")
                })
        }
        ,
        e.checkGroupRow(),
        e.defaultFuncSet = function() {
            e.setFormEl(),
                e.setContTab(),
                e.replaceImage(),
                e.selectElMethod.init()
        }
        ,
        e.headerMethod = {
            tgEl: {},
            init: function() {
                var a = e.headerMethod.tgEl;
                a.hasLnbLayer = g.hasClass("hasLnbLayer"),
                    a.$depth01 = u.hasClass("blogMenu") ? u.find("ul") : u.find(".gnbList"),
                    a.$depth01Anchor = a.$depth01.find("> li > a"),
                    a.$gnbLayer = a.hasLnbLayer ? u.find(".lnbLayerWrap").attr({
                        role: "region",
                        "aria-hidden": !0,
                        "aria-expanded": !1
                    }) : u.find("[class*=gnbLayerWrap]").attr({
                        role: "region",
                        "aria-hidden": !0,
                        "aria-expanded": !1
                    }),
                    a.$gnbLayerBg = g.find(".gnbLayerBg"),
                    a.$gnbBtn = u.find("> button[class*=tot]"),
                    a.$gnbBg = u.find(".gnbBg"),
                    a.totSearchLayer = h.find(".totSearchLayer").attr({
                        "aria-hidden": !0,
                        "aria-expanded": !1
                    }),
                    a.gnbLayerHeight = a.hasLnbLayer ? a.$gnbLayer.outerHeight(!0) : a.$gnbLayer.map(function() {
                        return t(this).height()
                    }).get(),
                    a.aniSpeed = 100,
                    a.hasLnbLayer ? (r = a.gnbLayerHeight,
                        a.$gnbLayer.find("> ul > li").height(a.gnbLayerHeight),
                        u.addClass("gnbItem" + a.$depth01Anchor.size())) : (r = Math.max.apply(Math, a.gnbLayerHeight),
                        a.$gnbLayer.each(function(e) {
                            t(this).find("> [class*=gnbLayerCo]").css("height", a.gnbLayerHeight[e])
                        })),
                    e.headerMethod._gnbLayer(),
                    e.headerMethod._setCurrent(),
                    e.headerMethod._totMenuLayer(),
                    e.headerMethod._languageLayer(),
                    e.headerMethod._totSearchLayer()
            },
            _setCurrent: function() {
                if (!m.find("[data-page]").length)
                    return !1;
                if (u.hasClass("blogMenu")) {
                    var e = m.find(".blogCont").data("page");
                    u.find('[data-page="' + e + '"]').addClass(D)
                }
            },
            _gnbBg: function(a) {
                var n = e.headerMethod.tgEl
                    , i = n.$depth01Anchor.map(function() {
                    return Math.round(t(this).width())
                }).get()
                    , o = n.$depth01Anchor.map(function() {
                    return Math.round(t(this).position().left)
                }).get();
                u.hasClass(T) ? n.$gnbBg.show().stop().animate({
                    left: o[a],
                    width: i[a] + 2,
                    opacity: 1
                }, n.aniSpeed) : n.$gnbBg.show().css({
                    left: o[a],
                    width: i[a] + 2,
                    opacity: 0
                }).stop().animate({
                    opacity: 1
                }, n.aniSpeed)
            },
            _gnbLayer: function() {
                var a = e.headerMethod.tgEl;
                function n() {
                    if (u.has(".feFoSelect.active").length > 0)
                        return !1;
                    a.$depth01Anchor.removeClass(T),
                    u.hasClass("blogMenu") && u.removeClass(T),
                    a.$gnbBtn.filter(".totMenuBtn").hasClass(T) || g.removeClass(T),
                        a.$gnbLayer.add(a.$gnbLayerBg).animate({
                            height: 0,
                            opacity: 0
                        }, a.aniSpeed, function() {
                            a.$gnbLayer.hide().attr({
                                "aria-hidden": !0,
                                "aria-expanded": !1
                            }),
                                a.$gnbLayerBg.hide(),
                                u.add(a.$gnbLayer).add(a.$gnbLayerBg).removeClass(T)
                        }),
                        a.$gnbBg.stop().fadeOut(a.aniSpeed)
                }
                a.$depth01Anchor.on({
                    "focusin mouseenter": function() {
                        var n = t(this)
                            , i = a.hasLnbLayer ? a.$gnbLayer : n.siblings(a.$gnbLayer)
                            , o = g.find(".languageLayer .layerCloseBtn button")
                            , r = a.$depth01Anchor.index(n)
                            , d = a.hasLnbLayer ? a.gnbLayerHeight : a.gnbLayerHeight[r]
                            , l = a.$gnbLayerBg.height()
                            , s = n.add(g).add(i).add(a.$gnbLayerBg)
                            , c = a.hasLnbLayer ? a.$depth01Anchor.not(n) : a.$depth01Anchor.not(n).add(a.$gnbLayer).not(i);
                        return !n.hasClass(T) && (s.addClass(T),
                            c.removeClass(T),
                        !g.hasClass("noGnbLayer") && (e.headerMethod._gnbBg(r),
                            a.$gnbLayer.hide().attr({
                                "aria-hidden": !0,
                                "aria-expanded": !1
                            }),
                        o.is(":visible") && o.trigger("click"),
                            u.hasClass(T) ? i.add(a.$gnbLayerBg).css("opacity", 1) : (u.addClass(T),
                                i.add(a.$gnbLayerBg).css("opacity", 0)),
                            i.css("height", l).attr({
                                "aria-hidden": !1,
                                "aria-expanded": !0
                            }),
                            void i.add(a.$gnbLayerBg).show().stop().animate({
                                height: d,
                                opacity: 1
                            }, a.aniSpeed)))
                    }
                }),
                    u.hasClass("blogMenu") || g.hasClass("headerSearch") ? u.on("mouseleave", n) : g.on("mouseleave", n),
                    a.$gnbBtn.on("focusin", n),
                    h.on("click", function(e) {
                        t(e.target).closest(g).length || n()
                    })
            },
            _totMenuLayer: function() {
                var a = e.headerMethod.tgEl
                    , n = a.$gnbBtn.filter(".totMenuBtn")
                    , i = h.find(".totMenuLayer").attr({
                    "aria-hidden": !0,
                    "aria-expanded": !1
                })
                    , o = i.find(":text")
                    , r = i.find("[class*=totMenuCol]")
                    , d = b.find(".ftMenuLayer")
                    , s = d.find(".layerCloseBtn")
                    , c = I + "/js/jquery.highlight.js"
                    , f = "전체 메뉴 열기";
                t.getScript(c).done(function() {
                    o.off("keyup").on("keyup", function() {
                        var e = t(this).val();
                        r.removeHighlight().highlight(e)
                    })
                }).fail(function() {
                    o.hide()
                }),
                    n.attr("aria-controls", i.attr("id")).on({
                        click: function(r) {
                            var c = t(this);
                            r.preventDefault(),
                                c.hasClass(T) ? function(e) {
                                    n.text(f),
                                        i.removeHighlight().stop().fadeOut(a.aniSpeed, function() {
                                            o.val(""),
                                                n.removeClass(T),
                                                t(this).attr({
                                                    "aria-hidden": !0,
                                                    "aria-expanded": !1
                                                }),
                                                g.removeClass(T)
                                        }),
                                    arguments.length > 0 && setTimeout(function() {
                                        e.focus()
                                    })
                                }() : (g.trigger("mouseleave").addClass(T),
                                    c.addClass(T).text("전체 메뉴 닫기"),
                                    i.css("position", "fixed").stop().fadeIn(a.aniSpeed, function() {
                                        t(this).css("position", "absolute").attr({
                                            "aria-hidden": !1,
                                            "aria-expanded": !0
                                        }),
                                            setTimeout(function() {
                                                l.scrollTop(0)
                                            })
                                    }),
                                    e.focusRotation(c, i)),
                            d.is(":visible") && s.trigger("click")
                        },
                        keydown: function(e) {
                            if (i.is(":visible")) {
                                var t = i.find(":focusable");
                                9 !== e.keyCode || e.shiftKey ? 9 === e.keyCode && e.shiftKey && (e.preventDefault(),
                                    t.filter(":last").focus()) : (e.preventDefault(),
                                    t.filter(":first").focus())
                            }
                        }
                    })
            },
            _languageLayer: function() {
                var a = e.headerMethod.tgEl
                    , n = g.find(".languageBtn > a[role=button]")
                    , i = n.siblings(".languageLayer").attr({
                    "aria-hidden": !0,
                    "aria-expanded": !1
                })
                    , o = i.find(".layerCloseBtn");
                n.add(o).on({
                    click: function(o) {
                        var r = t(this);
                        o.preventDefault(),
                            g.trigger("mouseleave"),
                            r.is(n) ? i.stop().fadeIn(a.aniSpeed, function() {
                                t(this).attr({
                                    "aria-hidden": !1,
                                    "aria-expanded": !0
                                })
                            }) : function(e) {
                                i.stop().fadeOut(a.aniSpeed, function() {
                                    t(this).attr({
                                        "aria-hidden": !0,
                                        "aria-expanded": !1
                                    })
                                }),
                                arguments.length > 0 && setTimeout(function() {
                                    e.focus()
                                })
                            }(n),
                            e.focusRotation(r, i)
                    }
                })
            },
            _totSearchLayer: function() {
                var a = e.headerMethod.tgEl
                    , n = a.$gnbBtn.filter(".totSearchBtn")
                    , i = a.totSearchLayer.find(".totSearchInp")
                    , o = i.siblings("label[for=" + i.attr("id") + "]")
                    , r = a.totSearchLayer.find(".layerCloseBtn");
                function d(e) {
                    a.totSearchLayer.fadeOut(a.aniSpeed, function() {
                        t(this).attr({
                            "aria-hidden": !0,
                            "aria-expanded": !1
                        }),
                            i.val(""),
                            o.show()
                    }),
                        k.stop().fadeOut(a.aniSpeed, function() {
                            k.removeClass("topIdxType")
                        }),
                    arguments.length > 0 && setTimeout(function() {
                        e.focus()
                    })
                }
                n.attr("aria-controls", a.totSearchLayer.attr("id")).on("click", function() {
                    var n = t(this);
                    n.hasClass(T) ? d() : (l.scrollTop(0),
                        g.trigger("mouseleave"),
                        a.totSearchLayer.stop().fadeIn(a.aniSpeed, function() {
                            t(this).attr({
                                "aria-hidden": !1,
                                "aria-expanded": !0
                            })
                        }),
                        k.addClass("topIdxType").stop().fadeIn(a.aniSpeed),
                        e.focusRotation(n, a.totSearchLayer))
                }),
                    i.on("focusin focusout", function(e) {
                        var n = t(this)
                            , i = t.trim(n.val()).length;
                        "focusin" === e.type && o.stop().fadeOut(a.aniSpeed),
                        "focusout" !== e.type || i || o.stop().fadeIn(a.aniSpeed)
                    }),
                    r.on("click", function() {
                        d(n)
                    })
            }
        },
        e.headerMethod.init(),
        e.fixedLayoutMethd = {
            tgEl: {},
            init: function() {
                var t = e.fixedLayoutMethd.tgEl;
                if (t.contTopBarHeight = v.height(),
                    t.logoHeight = g.hasClass("headerSearch") ? g.find(".headerRow").outerHeight() : p.height(),
                C <= 3 * L || C <= r + L || E)
                    return g.add(v).css("position", "absolute"),
                        g.css("top", 0),
                        y.css({
                            position: "absolute",
                            top: L + t.contTopBarHeight
                        }),
                        v.css("top", L),
                        !1;
                e.fixedLayoutMethd._setHeader(),
                    e.fixedLayoutMethd._setAside()
            },
            _setHeader: function() {
                var t, a, n = e.fixedLayoutMethd.tgEl, i = g.find(".languageLayer"), o = w ? 0 : 50;
                $ >= n.logoHeight && i.is(":visible") && i.stop().fadeOut(50),
                    B ? (g.add(v).css("position", "fixed"),
                        $ >= n.logoHeight ? (t = -n.logoHeight,
                            a = x) : (o = 50,
                            t = 0,
                            a = L)) : (g.add(v).css("position", "absolute"),
                        $ >= n.logoHeight ? (t = $ - n.logoHeight,
                            a = $ + x) : (o = 50,
                            t = 0,
                            a = L)),
                    g.stop().animate({
                        top: t
                    }, o, function() {
                        w = 0 !== t
                    }),
                    v.stop().animate({
                        top: a
                    }, o)
            },
            _setAside: function() {
                var t, a, n = e.fixedLayoutMethd.tgEl, i = y.outerHeight(), o = y.outerHeight(!0), r = m.outerHeight(!0), d = o - i, l = i + 2 * d + L + n.contTopBarHeight, s = $ + x + n.contTopBarHeight;
                if (C < l)
                    return !1;
                B ? $ >= n.logoHeight ? s + d >= r - o ? (t = "absolute",
                    a = r - o - d) : (t = "fixed",
                    a = x + n.contTopBarHeight) : (t = "absolute",
                    a = L + n.contTopBarHeight) : (t = "absolute",
                    a = $ >= n.logoHeight ? s + d >= r - o ? r - o - d : s : L + n.contTopBarHeight),
                    y.css({
                        position: t,
                        top: a
                    })
            }
        },
        e.fixedLayoutMethd.init(),
        e.utilBtnMethod = {
            tgEl: {},
            init: function() {
                var t = e.utilBtnMethod.tgEl;
                if (t.$contUtilMenu = h.find(".contUtilMenu"),
                    !t.$contUtilMenu.length)
                    return !1;
                c.is("[lang=ko]") && e.utilBtnMethod._replaceWrap(),
                    e.utilBtnMethod._copyBtn(),
                    e.utilBtnMethod._zoomBtn(),
                    e.utilBtnMethod._printBtn()
            },
            _replaceWrap: function() {
                var t;
                e.utilBtnMethod.tgEl.$contUtilMenu.wrap('<div class="contUtilMenuWrap"></div>'),
                    t = h.find(".contUtilMenuWrap"),
                    m.before(t).addClass("replaceUtilMenu")
            },
            _printBtn: function() {
                var n = e.utilBtnMethod.tgEl.$contUtilMenu.find(".pagePrint");
                if (t.browser.mobile)
                    return !1;
                n.show().on("click", function(e) {
                    e.preventDefault(),
                        a.print()
                }),
                    e.utilBtnMethod._checkMenu()
            },
            _copyBtn: function() {
                var i = e.utilBtnMethod.tgEl.$contUtilMenu.find(".copyURL");
                if (t.browser.mobile)
                    return !1;
                i.show().on("click", function(e) {
                    var o, r, d = a.location.href;
                    e.preventDefault(),
                        o = d,
                        r = t('<input type="text">'),
                        f.append(r),
                        r.val(o).select(),
                        n.execCommand("copy"),
                        r.remove(),
                        i.focus(),
                        alert("주소가 복사되었습니다.")
                })
            },
            _zoomBtn: function() {
                var a = e.utilBtnMethod.tgEl.$contUtilMenu.find("[class*=zoom]")
                    , n = a.filter(".zoomIn").find("button")
                    , i = a.filter(".zoomOut").find("button")
                    , r = a.filter(".zoomDefault").find("button")
                    , d = 1;
                if (o < 8 || t.browser.mobile)
                    return !1;
                1 === d && i.add(r).prop("disabled", !0),
                    a.show().on("click", "button", function() {
                        var a = t(this);
                        a.is(n) ? d += .25 : a.is(i) ? d -= .25 : d = 1,
                            1 !== d ? (E = !0,
                                i.add(r).prop("disabled", !1)) : (E = !1,
                                i.add(r).prop("disabled", !0)),
                            f.css({
                                zoom: d,
                                "-o-transform": "scale(" + d + ", " + d + ")",
                                "-o-transform-origin": "left top",
                                "-moz-transform-origin": "left top",
                                "-moz-transform": "scale(" + d + ", " + d + ")"
                            }),
                            e.fixedLayoutMethd.init()
                    })
            },
            _checkMenu: function() {
                e.utilBtnMethod.tgEl.$contUtilMenu.find("li:not([class*=zoom]):visible:last").addClass("lastChild")
            }
        },
        e.utilBtnMethod.init(),
        e.selectElMethod = {
            optionValue: {
                phone: ["02", "031", "032", "033", "041", "042", "043", "051", "052", "053", "054", "055", "061", "062", "063", "064", "070", "010", "011", "016", "017", "018", "019"],
                mobile: ["010", "011", "016", "017", "018", "019"],
                email: ["chollian.net", "dreamwiz.com", "empal.com", "freechal.com", "gmail.com", "hanafos.com", "hananet.net", "hanmail.net", "hanmir.com", "hitel.net", "hotmail.com", "intizen.com", "kebi.com", "korea.com", "kornet.net", "lycos.co.kr", "msn.com", "nate.com", "naver.com", "netian.com", "netsgo.com", "orgio.net", "paran.com", "sayclub.com", "shinbiro.com", "unitel.co.kr"]
            },
            init: function() {
                var a;
                if (e.selectElMethod.selectEl = f.find("select").not(".hideEl, .originType"),
                    a = e.selectElMethod.selectEl.filter("[class*=selectType]"),
                    !this.selectEl.length)
                    return !1;
                a.length && a.each(function() {
                    var a, n, i, o, r, d = t(this);
                    d.hasClass("selectTypeP") && (a = "phone"),
                    d.hasClass("selectTypeM") && (a = "mobile"),
                    d.hasClass("selectTypeE") && (a = "email"),
                        i = (n = e.selectElMethod.optionValue[a]).length;
                    for (var l = 0; l < i; l++)
                        r = '<option value="' + (o = n[l]) + '">' + o + "</option>",
                            d.append(r)
                }),
                    e.selectElMethod.selectEl.feForm(),
                    e.selectElMethod._emailDomain(),
                    e.selectElMethod._dateSelect(),
                    e.selectElMethod._setSelected(),
                    e.cssPseudoEl()
            },
            _emailDomain: function() {
                var a = e.selectElMethod.selectEl.filter(".selectTypeE");
                a.on("change", function() {
                    var e = t(this)
                        , a = e.data("group")
                        , n = e.find("option:selected")
                        , i = a ? m.find('.inputTypeE[data-group="' + a + '"]') : e.parent().prev()
                        , o = n.text();
                    "default" === n.val() ? i.removeAttr("readonly").val("").focus() : i.attr("readonly", "readonly").val(o)
                }),
                    function() {
                        var e = m.find(".btnNaver")
                            , t = m.find(":checkbox[id*=idNaver]");
                        if (!e.length)
                            return !1;
                        e.on("click", function(e) {
                            e.preventDefault(),
                                t.prop("checked", !0).trigger("feChange")
                        })
                    }(),
                    m.find(":checkbox[id*=idNaver]").on("change feChange", function(e) {
                        var a = t(this)
                            , n = W ? a.closest("table") : a.closest(".supOption")
                            , i = W ? n.find(".itemEmail :text, .itemEmail input[type=email]") : n.closest("td").find(":text:first")
                            , o = W ? n.find(".selectTypeE") : n.closest("td").find(".emailSelect select")
                            , r = a.prop("checked");
                        r ? ("feChange" === e.type && i.val("").prop("disabled", !0),
                            o.find('option[value="naver.com"]').prop("selected", !0).end().prop("disabled", !0).trigger("change")) : (i.prop("disabled", !1),
                            o.prop("disabled", !1).trigger("change"))
                    })
            },
            _dateSelect: function() {
                var a, n, i, o, r, d, l, s, c, h, g, p = e.selectElMethod.selectEl.filter(".dateYY"), u = e.selectElMethod.selectEl.filter(".dateMM"), v = e.selectElMethod.selectEl.filter(".dateDD"), m = p.filter(".startYY"), y = p.filter(".endYY"), b = u.filter(".startMM"), k = u.filter(".endMM"), M = v.filter(".startDD"), C = v.filter(".endDD"), $ = (new Date).getFullYear();
                function L(e, t) {
                    if ("month" === e)
                        l === h ? I(t, s) : t.find("option").length < 12 && I(t, 1);
                    else {
                        if ("day" !== e)
                            return !1;
                        l === h && s === g ? T(t, c) : t.find("option").length < 31 && T(t, 1)
                    }
                }
                function x(e, t) {
                    var n = -1 === f.find("h1:first").text().indexOf("채용") ? $ : $ + 5;
                    0 !== arguments.length ? (e.find("option:not(:first-child)").remove(),
                        p = e,
                        o = t) : (p = p,
                        o = 1910);
                    for (var i = n; i >= o; i--)
                        a = '<option value="' + i + '">' + i + "</option>",
                            p.append(a);
                    0 !== arguments.length && e.trigger("feReset")
                }
                function I(e, t) {
                    0 !== arguments.length ? (e.find("option:not(:first-child)").remove(),
                        u = e,
                        r = parseInt(t)) : (u = u,
                        r = 1);
                    for (var a = r; a <= 12; a++) {
                        var i = a < 10 ? "0" + a : a;
                        n = '<option value="' + i + '">' + i + "</option>",
                            u.append(n)
                    }
                    0 !== arguments.length && e.trigger("feReset")
                }
                function T(e, t) {
                    0 !== arguments.length ? (e.find("option:not(:first-child)").remove(),
                        v = e,
                        d = parseInt(t)) : (v = v,
                        d = 1);
                    for (var a = d; a <= 31; a++) {
                        var n = a < 10 ? "0" + a : a;
                        i = '<option value="' + n + '">' + n + "</option>",
                            v.append(i)
                    }
                    0 !== arguments.length && e.trigger("feReset")
                }
                0 === arguments.length && (x(),
                    I(),
                    T()),
                    p.add(u).add(v).on("change", function() {
                        var e, a = t(this), n = a.closest(".feFoSelect").siblings(".feFoSelect");
                        a.is(m) ? x(e = n.find(y), l = a.val()) : a.is(b) ? (e = n.find(k),
                            s = a.val(),
                            L("month", e)) : a.is(M) ? (e = n.find(C),
                            c = a.val(),
                            L("day", e)) : a.is(y) ? (e = n.find(k),
                            h = a.val(),
                            L("month", e)) : a.is(k) ? (e = n.find(C),
                            g = a.val(),
                            L("day", e)) : a.is(C) && a.val()
                    })
            },
            _setSelected: function() {
                var a = e.selectElMethod.selectEl.filter("[data-selected]");
                if (!a.length)
                    return !1;
                a.each(function() {
                    var e = t(this)
                        , a = e.data("selected");
                    e.find('[value="' + a + '"]').prop("selected", !0).trigger("feChange")
                })
            }
        },
        e.selectElMethod.init(),
    e.layerMethod = {
        options: {
            layerWrapClass: "layerWrap",
            lockScrollClass: "lockScroll",
            dataClass: "layer",
            dataURL: "layer-url",
            dataOpen: "layer-open",
            dataLoad: "layer-load",
            dataClose: "layer-close",
            closeBtn: ".layerCloseBtn, .closeBtn",
            aniSpeed: 100,
            $layerLoadWrap: "",
            $tgBtn: "",
            $tgLayer: ""
        },
        init: function() {
            var a = e.layerMethod.options;
            a.$layerBtn = t(".layerBtn"),
                a.$layerBtn.off().on("click", function(n) {
                    if (a.$tgBtn = t(this),
                        n.preventDefault(),
                        a.$tgBtn.data(a.dataClass))
                        a.$tgLayer = t("." + a.layerWrapClass).filter("." + a.$tgBtn.data(a.dataClass)),
                            e.layerMethod.viewLayer(0);
                    else {
                        if (!a.$tgBtn.data(a.dataURL))
                            return !1;
                        e.layerMethod.loadLayer(0)
                    }
                })
        },
        loadLayer: function(t, a, n, i) {
            var o = e.layerMethod.options
                , r = 0 === t ? o.$tgBtn.data(o.dataURL) + " ." + o.layerWrapClass : t
                , d = 0 === t ? 1 : 2;
            h.find(o.$layerLoadWrap).length || h.append('<div id="layerLoadWrap" />'),
                o.$layerLoadWrap = h.find("#layerLoadWrap"),
                o.$layerLoadWrap.load(r, function(t, r) {
                    if ("error" === r)
                        return !1;
                    o.$tgLayer = o.$layerLoadWrap.find("." + o.layerWrapClass),
                        e.layerMethod.viewLayer(d, a, n, i)
                })
        },
        viewLayer: function(a, n, i, o) {
            var r, d, s, c = e.layerMethod.options;
            c.scrollTopPos = $,
                c.$tgLayer = 0 !== a && 1 !== a && 2 !== a ? t("." + c.layerWrapClass).filter("." + a) : c.$tgLayer,
                r = c.$tgLayer.outerWidth(),
                0 === a || 1 === a ? (c.$tgBtn.data(c.dataOpen) && (d = e.stringToFunc(c.$tgBtn.data(c.dataOpen))),
                c.$tgBtn.data(c.dataLoad) && (s = e.stringToFunc(c.$tgBtn.data(c.dataLoad)))) : (n && (d = e.stringToFunc(n)),
                i && (s = e.stringToFunc(i))),
            d && d(),
                W ? c.$layerLoadWrap ? h.append(c.$layerLoadWrap) : h.append(c.$tgLayer) : c.$layerLoadWrap ? k.before(c.$layerLoadWrap) : k.before(c.$tgLayer),
            c.$tgLayer.hasClass("layerDimNone") || k.addClass("topIdxType").off().fadeIn(c.aniSpeed),
            W || c.$tgLayer.css("margin-left", -r / 2),
                l.scrollTop(0),
                c.$tgLayer.off().fadeIn(c.aniSpeed, function() {
                    c.$tgLayer.off().on("click", c.closeBtn, function(t) {
                        t.preventDefault(),
                            e.layerMethod.closeLayer(o)
                    }),
                    1 !== a && 2 !== a || e.defaultFuncSet(),
                    s && s(),
                        e.focusRotation(c.$tgBtn, c.$tgLayer),
                        e.layerMethod.lockScroll()
                })
        },
        closeLayer: function(t) {
            var a, n = e.layerMethod.options;
            "" !== n.$tgBtn && n.$tgBtn.data(n.dataClose) ? a = e.stringToFunc(n.$tgBtn.data(n.dataClose)) : t && (a = e.stringToFunc(t)),
                k.off().fadeOut(n.aniSpeed, function() {
                    k.removeClass("topIdxType")
                }),
                n.$tgLayer.fadeOut(n.aniSpeed, function() {
                    n.$layerLoadWrap.length && n.$layerLoadWrap.remove(),
                    a && a(),
                    "" !== n.$tgBtn && n.$tgBtn.focus(),
                    c.hasClass(n.lockScrollClass) && e.layerMethod.lockScroll(0),
                        l.scrollTop(n.scrollTopPos)
                })
        },
        lockScroll: function(t) {
            var a, n = e.layerMethod.options, i = e.schDateMethod.tgEl;
            return "" !== n.$tgLayer && (a = n.$tgLayer.height()),
                0 === t || i.isMainRsvLayer || W ? (c.removeClass(n.lockScrollClass),
                    !1) : !("" === n.$tgLayer || !n.$tgLayer.filter(":visible").length) && (l.scrollTop(0),
                    void (C >= a + 90 ? c.addClass(n.lockScrollClass) : c.removeClass(n.lockScrollClass)))
        }
    },
    e.layerMethod.init(),
    e.toggleFormMethod = {
        tgEl: {
            hideClass: "tgHideEl"
        },
        init: function() {
            var a = e.toggleFormMethod.tgEl;
            if (a.$toggleTrigger = h.find(":checkbox[data-tg-trigger], \t\t\t\t:radio[data-tg-trigger], select:has([data-tg-trigger])"),
                a.$toggleWrap = h.find("[data-tg-wrap]").attr({
                    role: "region",
                    "aria-expanded": !1
                }),
                a.$uncheckWrap = h.find("[data-tg-uncheck]").not("[data-tg-trigger]"),
                a.$toggleGroup = h.find("[data-tg-group]").not("[data-tg-trigger]"),
                !a.$toggleTrigger.length)
                return !1;
            a.$toggleTrigger.on("change check", function() {
                var a = "INPUT" === t(this).prop("tagName") ? t(this) : t(this).find(":checked");
                e.toggleFormMethod._toggle(a)
            }).trigger("check")
        },
        _toggle: function(t) {
            var a = e.toggleFormMethod.tgEl
                , n = t.attr("data-tg-trigger")
                , i = t.attr("data-tg-group")
                , o = t.attr("data-tg-uncheck")
                , r = a.$toggleWrap.filter("[data-tg-wrap=" + n + "]")
                , d = a.$uncheckWrap.filter("[data-tg-uncheck=" + o + "]")
                , l = a.$toggleGroup.filter("[data-tg-group=" + i + "]");
            t.is(":checked") ? (i && l.hide().addClass(a.hideClass).attr("aria-expanded", !1),
                r.show().removeClass(a.hideClass).attr("aria-expanded", !0),
                d.hide().addClass(a.hideClass).attr("aria-expanded", !1)) : (r.hide().addClass(a.hideClass).attr("aria-expanded", !1),
                d.show().removeClass(a.hideClass).attr("aria-expanded", !0))
        }
    },
    e.toggleFormMethod.init(),
    e.datepickerMethod = {
        tgEl: {
            icoURL: I + "/img/common/ico_date.png",
            icoTxt: "달력 보기"
        },
        init: function() {
            var n = e.datepickerMethod.tgEl
                , i = a.location.href
                , o = h.find(":submit, .btnType03");
            if (n.$dpInp = h.find(":text[class*=dpInp]"),
                n.$dpInpFrom = n.$dpInp.filter(".dpInpFrom"),
                n.$dpInpTo = n.$dpInp.filter(".dpInpTo"),
                n.$dateWrap = n.$dpInp.closest("[class*=dateWrap]"),
                n.$dpInpToday = n.$dpInp.filter(".dpInpToday"),
                n.$setBtn = h.find("[data-setdate]"),
            !n.$dpInp.length && !h.find(".layerDetSearch").length)
                return !1;
            if (n.$dpInp.datepicker({
                showOn: "button",
                buttonImage: n.icoURL,
                buttonText: n.icoTxt,
                buttonImageOnly: !0,
                changeYear: !0
            }),
                e.datepickerScope(),
            n.$dpInpFrom.length && e.datepickerMethod._setMinMax(),
            n.$dpInpToday.length && (n.$dpInpToday.each(function() {
                var e = t(this)
                    , a = e.closest(n.$dateWrap).siblings(n.$dateWrap).find(n.$dpInp);
                e.datepicker("setDate", "0"),
                    a.datepicker("setDate", "-1y"),
                    e.add(a).datepicker("option", "minDate", "-5y").datepicker("option", "maxDate", "0")
            }),
            1 === n.$dpInpToday.length)) {
                var r = n.$dpInpToday.closest(n.$dateWrap).siblings(n.$dateWrap).find(n.$dpInp);
                if (o.on("click", function() {
                    e.createCookie("dpvl", i, 1),
                        e.createCookie("dpva", n.$dpInpToday.val(), 1),
                        e.createCookie("dpvb", r.val(), 1)
                }),
                null !== e.getCookie("dpvl") && null !== e.getCookie("dpvb") && null !== e.getCookie("dpva")) {
                    if (e.getCookie("dpvl") !== i)
                        return !1;
                    n.$dpInpToday.datepicker("setDate", e.getCookie("dpva")),
                        r.datepicker("setDate", e.getCookie("dpvb")),
                        e.deleteCookie("dpvl"),
                        e.deleteCookie("dpvb"),
                        e.deleteCookie("dpva")
                }
            }
            n.$setBtn.length && e.datepickerMethod._setDateBtn()
        },
        _setMinMax: function() {
            var a = e.datepickerMethod.tgEl;
            a.$dpInpFrom.on("change", function() {
                var e = t(this);
                e.closest(a.$dateWrap).siblings(a.$dateWrap).find(a.$dpInpTo).datepicker("option", "minDate", e.val())
            }),
                a.$dpInpTo.on("change", function() {
                    var e = t(this);
                    e.closest(a.$dateWrap).siblings(a.$dateWrap).find(a.$dpInpFrom).datepicker("option", "maxDate", e.val())
                })
        },
        _setDateBtn: function() {
            var a, n, i;
            function o(e) {
                var o = t(e.target)
                    , r = o.data("setdate")
                    , d = o.data("dpinp");
                a = r.slice(0, 1),
                    n = r.split(a + "-")[1],
                    i = h.find(":text[data-dpinp=" + d + "]"),
                    e.preventDefault(),
                    e.stopImmediatePropagation(),
                    "b" === a ? i.first().datepicker("setDate", "-" + n).end().last().datepicker("setDate", new Date) : i.first().datepicker("setDate", new Date).end().last().datepicker("setDate", "+" + n).end()
            }
            e.datepickerMethod.tgEl.$setBtn.filter(":radio").on("change", function(e) {
                o(e)
            }).end().not(":radio").on("click", function(e) {
                o(e)
            })
        }
    },
    e.datepickerMethod.init(),
    e.galleryImageMethod = {
        tgEl: {},
        init: function() {
            var t = e.galleryImageMethod.tgEl;
            if (t.$galleryWrap = m.find(".thumBnrWrap"),
                t.$galleryItem = t.$galleryWrap.find(".feSlItem").attr("role", "button"),
                t.$preViewWrap = m.find(".gallerySlide").prepend('<div class="slideMask" />'),
                t.$galleryTxt = t.$preViewWrap.find(".galleryTxt"),
                t.$preViewMask = t.$preViewWrap.find(".slideMask"),
                t.$preViewBtn = t.$preViewWrap.find("button"),
                t.galleryItemSize = t.$galleryItem.size(),
                t.aniSpeed = 500,
                t.currentIdx = 0,
                t.$preViewImg,
                t.currentDir,
                !t.$galleryWrap.length)
                return !1;
            e.galleryImageMethod._setDefault()
        },
        _setDefault: function() {
            var a = e.galleryImageMethod.tgEl;
            a.$galleryWrap.feSlide({
                visibleItem: 4,
                pagingBtn: !1,
                aniSpeed: a.aniSpeed
            }),
                a.$galleryItem.on("click", function(n) {
                    var i = t(this);
                    if (a.currentIdx = t(this).index(),
                        n.preventDefault(),
                        i.hasClass(T))
                        return !1;
                    e.galleryImageMethod._setPreView(1)
                }).each(function() {
                    var e = t(this).find("img");
                    a.$preViewMask.append(e.clone())
                }),
                a.$preViewBtn.on("click", function() {
                    var n = t(this);
                    a.currentDir = n.hasClass("btnPrev") ? a.currentDir = "prev" : a.currentDir = "next",
                        "prev" === a.currentDir ? 0 === a.currentIdx ? a.currentIdx = a.galleryItemSize - 1 : a.currentIdx-- : a.currentIdx + 1 === a.galleryItemSize ? a.currentIdx = 0 : a.currentIdx++,
                        e.galleryImageMethod._setPreView(1)
                }),
                a.$preViewImg = a.$preViewMask.find("img"),
                e.galleryImageMethod._setPreView()
        },
        _setActive: function() {
            var t = e.galleryImageMethod.tgEl;
            t.$galleryItem.removeClass(T).eq(t.currentIdx).addClass(T)
        },
        _setPreView: function() {
            var t = e.galleryImageMethod.tgEl;
            e.galleryImageMethod._setActive(),
                0 === arguments.length ? t.$preViewImg.eq(t.currentIdx).show() : t.$preViewImg.filter(":visible").fadeOut(t.aniSpeed).end().eq(t.currentIdx).fadeIn(t.aniSpeed),
            t.$galleryTxt.length && e.galleryImageMethod._setGalleryTxt(t.$preViewImg.eq(t.currentIdx))
        },
        _setGalleryTxt: function(t) {
            var a = e.galleryImageMethod.tgEl
                , n = t.data("imgtitle") ? t.data("imgtitle") : ""
                , i = t.prop("alt") ? t.prop("alt") : ""
                , o = "" !== n ? "<strong>" + n + "</strong><span>" + i + "</span>" : "<span>" + i + "</span>";
            a.$galleryTxt.html(o),
                n || i ? a.$galleryTxt.show() : a.$galleryTxt.hide()
        }
    },
    e.galleryImageMethod.init(),
    e.schDateMethod = {
        tgEl: {
            schedulType1Class: "scheduleAll",
            schedulType2Class: "schedulAM",
            schedulType3Class: "schedulPM"
        },
        today: {},
        currentDay: {},
        dateString: "",
        timeString: "",
        doctorString: "",
        clinicString: "",
        changeMonthYear: "",
        scheduleArr: [],
        init: function(a) {
            var n, i, o, r = e.schDateMethod.tgEl, d = e.schDateMethod.today;
            return r.$rsvLayer = h.find(".rsvLayer"),
                r.$mainRsvLayer = h.find(".layerRsvCheck"),
                r.isRsvLayer = h.is(":has(.rsvLayer)"),
                r.isMainRsvLayer = h.is(":has(.layerRsvCheck)"),
                r.$scheduleWrap = h.find(".rsvSchedule"),
                r.$time = r.isMainRsvLayer ? r.$mainRsvLayer.find(".rsvTimeSelect") : r.$scheduleWrap.find(".time"),
                r.$calendar = r.$scheduleWrap.find(".calendar"),
                r.$infoTxt = r.isMainRsvLayer ? r.$mainRsvLayer.find(".noData:eq(0)") : m.find(".rsvScheduleWrap .result"),
                r.$infoTxtTime = r.isMainRsvLayer ? r.$mainRsvLayer.find(".noData:eq(1)") : r.$rsvLayer.find(".time p"),
                r.$timeWrap = r.$mainRsvLayer.find(".timeWrap"),
                r.$resultSet = r.$timeWrap.find(".boxTypeGray, .btnBig"),
                r.$rsvClinicSelect = r.$mainRsvLayer.find(".rsvClinicSelect"),
                r.$rsvDoctorSelect = r.$mainRsvLayer.find(".rsvDoctorSelect"),
                (d = new Date).year = d.getFullYear(),
                d.month = d.getMonth() + 1,
                d.day = d.getDay(),
            !(!a && !r.isRsvLayer) && (a && t.isArray(a) && (e.schDateMethod.scheduleArr = a),
            !!r.$calendar.length && (r.$infoTxt.add(r.$time).hide(),
                r.$scheduleWrap.show(),
                r.$calendar.datepicker("destroy").datepicker({
                    onChangeMonthYear: function(t, a) {
                        var n = e.stringToFunc(e.schDateMethod.changeMonthYear);
                        e.schDateMethod.currentDay.year = t = t,
                            e.schDateMethod.currentDay.month = a = a,
                        void 0 !== n && n(),
                            setTimeout(function() {
                                e.schDateMethod._setDate(t, a),
                                    e.datepickerScope("진료일정")
                            })
                    },
                    onSelect: function(t, a) {
                        e.schDateMethod.dateString = t,
                            n = a.currentYear,
                            i = a.currentMonth + 1,
                            o = parseInt(a.currentDay),
                            setTimeout(function() {
                                e.schDateMethod._setDate(n, i)
                            }),
                            e.schDateMethod._setTime(n, i, o),
                        (r.isRsvLayer || r.isMainRsvLayer) && r.$infoTxtTime.hide(),
                        r.isMainRsvLayer && (r.$timeWrap.is(":hidden") && r.$timeWrap.show(),
                            r.$time.trigger("feReset"))
                    }
                }),
                e.datepickerScope("진료일정"),
                e.schDateMethod._setClinicDoctor(),
                void e.schDateMethod._setDate(d.year, d.month)))
        },
        _setClinicDoctor: function() {
            var t = e.schDateMethod.tgEl
                , a = e.rsvInfoMethod.tgEl;
            if (t.isMainRsvLayer) {
                var n = t.$mainRsvLayer.find(".clinicVal")
                    , i = t.$mainRsvLayer.find(".doctorVal");
                e.schDateMethod.clinicString = t.$rsvClinicSelect.find("option:selected").text(),
                    e.schDateMethod.doctorString = t.$rsvDoctorSelect.find("option:selected").text(),
                    n.text(e.schDateMethod.clinicString),
                    i.text(e.schDateMethod.doctorString)
            } else
                t.isRsvLayer || (e.schDateMethod.clinicString = a.$hosInfo.text(),
                    e.schDateMethod.doctorString = a.$docInfo.text())
        },
        _setDate: function(a, n) {
            t.each(e.schDateMethod.scheduleArr, function(i, o) {
                var r = t("a.ui-state-default")
                    , d = o[0]
                    , l = o[1]
                    , s = o[2]
                    , c = e.schDateMethod.tgEl["schedulType" + o[3] + "Class"];
                a === d && n === l && r.filter(":eq(" + (s - 1) + ")").addClass(c)
            })
        },
        _setTime: function(a, n, i) {
            var o = e.schDateMethod.tgEl
                , r = o.$time;
            function d() {
                var t = o.isMainRsvLayer ? o.$mainRsvLayer : o.$rsvLayer
                    , a = o.isMainRsvLayer ? o.$resultSet : t.find(".rsvConfirmTxt")
                    , n = t.find(".yDate")
                    , i = t.find(".mDate")
                    , r = t.find(".dDate")
                    , d = t.find(".hTime")
                    , l = t.find(".mTime")
                    , s = e.schDateMethod.getRsvInfo()[0]
                    , c = e.schDateMethod.getRsvInfo()[1];
                e.schDateMethod._setClinicDoctor(),
                    a.show(),
                    e.layerMethod.lockScroll(),
                    n.text(s[0]),
                    i.text(s[1]),
                    r.text(s[2]),
                    d.text(c[0]),
                    l.text(c[1])
            }
            o.$resultSet.hide(),
                r.find("label").remove().end().show(),
                t.each(e.schDateMethod.scheduleArr, function(l, s) {
                    var c = s[0]
                        , f = s[1]
                        , h = s[2]
                        , g = s[4];
                    a === c && n === f && i === h && function(a) {
                        o.isMainRsvLayer && r.find("option:not(:eq(0))").remove();
                        t.each(a, function(e, t) {
                            var a = t.toString().split(":")[0]
                                , n = t.toString().split(":")[1]
                                , i = o.isMainRsvLayer ? '<option value="' + a + n + '">' + a + ":" + n + "</option>" : '<input type="radio" name="time" \t\t\t\t\t\t\t\tclass="rsvTime" data-fe-label="' + t + '" title="' + t + '">';
                            r.append(i)
                        }),
                            o.isMainRsvLayer ? r.on("change", function() {
                                var a = t(this).val()
                                    , n = a.slice(0, 2)
                                    , i = a.slice(2, 4);
                                e.schDateMethod.timeString = n + ":" + i,
                                    "" === a ? o.$resultSet.hide() : d()
                            }) : r.find(".rsvTime").feForm().on("change", function() {
                                var a = t(this)
                                    , n = e.schDateMethod.dateString + " " + a.prop("title");
                                e.schDateMethod.timeString = a.prop("title"),
                                    e.rsvInfoMethod.dateInfo(n),
                                o.isRsvLayer && d()
                            });
                        e.rsvToggleBordr("time")
                    }(g)
                })
        },
        getRsvInfo: function() {
            return [e.schDateMethod.dateString.split("-"), e.schDateMethod.timeString.split(":"), e.schDateMethod.clinicString, e.schDateMethod.doctorString]
        }
    },
    e.schDateMethod.init(),
    e.rsvInfoMethod = {
        tgEl: {},
        init: function() {
            var a = e.rsvInfoMethod.tgEl;
            if (a.$infoWrap = m.find(".rsvInfoWrap .info"),
                a.$rsvClinicList = m.find(".rsvClinicList"),
                a.$rsvDoctorList = m.find(".rsvDoctorList"),
                a.$rsvDoctorListTxt = a.$rsvDoctorList.find(".noResult"),
                a.$rsvDoctorListUl = a.$rsvDoctorList.find("ul"),
                a.$hosInfo = a.$infoWrap.find("em:eq(0)"),
                a.$docInfo = a.$infoWrap.find("em:eq(1)"),
                a.$dayInfo = a.$infoWrap.find("em:eq(2)"),
                a.$typeLbl = a.$infoWrap.find("span"),
                a.$resetBtn = m.find(".rsvReset"),
                !a.$infoWrap.length)
                return !1;
            a.$rsvClinicList.on("change", ":radio", function() {
                var a = t(this).prop("title");
                e.rsvInfoMethod.resetInfo("clinic"),
                    e.rsvInfoMethod.clinicInfo(a)
            }),
                a.$resetBtn.on("click check", function() {
                    e.rsvInfoMethod.resetInfo()
                })
        },
        clinicInfo: function(t) {
            var a = e.rsvInfoMethod.tgEl;
            a.$rsvDoctorListUl.show(),
                a.$hosInfo.text(t).show(),
                a.$rsvDoctorListTxt.add(a.$docInfo).add(a.$typeLbl).add(a.$dayInfo).hide(),
                e.rsvToggleBordr("doctor")
        },
        doctorInfo: function(t, a) {
            var n = e.rsvInfoMethod.tgEl
                , i = e.schDateMethod.tgEl;
            "reset" === t ? (e.schDateMethod.doctorString = "",
                n.$docInfo.add(n.$typeLbl).add(n.$dayInfo).hide(),
                i.$scheduleWrap.add(i.$timeWrap).hide(),
                i.$infoTxt.add(i.$infoTxtTime).show(),
                e.rsvToggleBordr("doctor")) : (n.$dayInfo.hide(),
                n.$docInfo.text(t).show(),
                1 === a ? n.$typeLbl.show() : n.$typeLbl.hide(),
                e.rsvToggleBordr("date"))
        },
        dateInfo: function(t) {
            var a = e.rsvInfoMethod.tgEl
                , n = e.schDateMethod.tgEl;
            "reset" === t ? (e.schDateMethod.dateString = "",
                e.schDateMethod.timeString = "",
                a.$dayInfo.hide(),
                n.$calendar.find(".ui-datepicker-current-day a").trigger("click")) : a.$dayInfo.text(t).show()
        },
        resetInfo: function(t) {
            var a = e.rsvInfoMethod.tgEl
                , n = e.schDateMethod
                , i = a.$rsvClinicList.find(":radio:checked");
            n.dateString = "",
                n.timeString = "",
                n.doctorString = "",
                n.clinicString = "",
                n.tgEl.isMainRsvLayer ? (n.tgEl.$timeWrap.hide(),
                    n.tgEl.$infoTxtTime.show(),
                    n.tgEl.$mainRsvLayer.find("select").find("option:not(:first-child)").remove().end().trigger("feReset"),
                    e.rsvInfoMethod.doctorInfo("reset")) : ("clinic" !== t && i.trigger("feReset"),
                    a.$hosInfo.add(a.$rsvDoctorListUl).hide(),
                    a.$rsvDoctorListTxt.show(),
                    a.$rsvDoctorListUl.find("button.checked").trigger("click"),
                    e.rsvInfoMethod.doctorInfo("reset")),
                e.rsvToggleBordr("clinic")
        }
    },
    e.rsvInfoMethod.init(),
    e.countTxtMethod = {
        tgEl: {
            dataName: "maxlength",
            alertTxt: "허용된 글자 수를 초과하였습니다."
        },
        init: function() {
            var t = e.countTxtMethod.tgEl;
            if (t.$textWrap = m.find("textarea[data-maxlength]"),
                !t.$textWrap.length)
                return !1;
            e.countTxtMethod._countCharacter(t)
        },
        _getCharByte: function(e, t, a, n, i) {
            if (null === e || 0 === e.length)
                return 0;
            for (a = i = 0; i < e.length; i++)
                if (a += (n = e.charCodeAt(i)) >> 11 ? 3 : n >> 7 ? 2 : 1,
                    t) {
                    if (a === t) {
                        i += 1;
                        break
                    }
                    if (a > t) {
                        i = i;
                        break
                    }
                }
            return [a, e.substring(0, i)]
        },
        _setTxtCounter: function(e, t) {
            t = t < 10 ? "00" + t : t < 100 ? "0" + t : t,
                e.text(t)
        },
        _countCharacter: function(a) {
            a.$textWrap.off("keyup").on("keyup", function() {
                var n = t(this)
                    , i = n.siblings(".byte").find("em")
                    , o = n.val()
                    , r = n.data(a.dataName);
                e.countTxtMethod._getCharByte(o)[0] > r && (alert(a.alertTxt),
                    setTimeout(function() {
                        n.val(e.countTxtMethod._getCharByte(o, r)[1])
                    })),
                    setTimeout(function() {
                        i.length && e.countTxtMethod._setTxtCounter(i, n.val().length)
                    })
            }).trigger("keyup")
        }
    },
    e.countTxtMethod.init(),
    e.addFieldMethod = {
        tgEl: {},
        init: function() {
            var t = e.addFieldMethod.tgEl;
            return t.$formField = m.find(".addFormField[data-form-group]"),
                t.$addBtn = m.find(".addFormBtn[data-form-group]"),
                t.$removeBtn = m.find(".removeFormBtn"),
            0 === arguments.length && (!!t.$addBtn.length && void e.addFieldMethod._addField())
        },
        _addField: function() {
            var a = e.addFieldMethod.tgEl;
            a.$addBtn.on("click check", function(n) {
                var i = t(this).data("form-group")
                    , o = '[data-form-group="' + i + '"]'
                    , r = e.saveHTMLTemplate(i)
                    , d = a.$formField.filter(o);
                n.preventDefault(),
                "click" === n.type && (d.filter(":last").after(r),
                    a.$formField = m.find(".addFormField[data-form-group]"),
                    d = a.$formField.filter(o),
                    a.$removeBtn = m.find(".removeFormBtn"),
                    e.setFormEl(),
                    e.layerMethod.init(),
                    e.selectElMethod.init(),
                    e.toggleFormMethod.init(),
                    d.filter(":last").find("select").trigger("feReset").end().find(":checkbox").trigger("feReset").end().find(":text").val("")),
                    d.find(a.$removeBtn).show().end().filter(":first").find(a.$removeBtn).hide(),
                    e.addFieldMethod._removeField(),
                    e.addFieldMethod._setIdx()
            }).trigger("check")
        },
        _removeField: function() {
            var a = e.addFieldMethod.tgEl;
            a.$removeBtn.off().on("click", function() {
                var n = t(this).closest(a.$formField);
                if (!confirm("삭제하시겠습니까?"))
                    return !1;
                n.remove(),
                    a.$formField = m.find(".addFormField[data-form-group]"),
                    e.addFieldMethod._setIdx()
            })
        },
        _setIdx: function() {
            var a = e.addFieldMethod.tgEl;
            a.$formField.each(function() {
                var n = t(this)
                    , i = n.find(".idxNum")
                    , o = '[data-form-group="' + n.data("form-group") + '"]'
                    , r = a.$formField.filter(o).index(n) + 1
                    , d = a.$addBtn.filter(o)
                    , l = d.is("[data-form-max]") ? d.data("form-max") : 5;
                n.attr("data-form-idx", r),
                i.length && (a.$formField.filter(o).length > 1 ? i.text(r + ". ") : i.text("")),
                    a.$formField.filter(o).length >= l ? d.hide() : d.show(),
                    e.addFieldMethod._resetToggleForm(n, r)
            })
        },
        _resetToggleForm: function(e, a) {
            var n = e.find("[data-tg-group]")
                , i = e.find(".reLabel");
            n.each(function() {
                var e = t(this)
                    , n = e.data("tg-group")
                    , i = e.data("tg-wrap")
                    , o = e.data("tg-trigger")
                    , r = e.data("tg-uncheck");
                n && e.attr("data-tg-group", n + "Idx" + a),
                i && e.attr("data-tg-wrap", i + "Idx" + a),
                o && e.attr("data-tg-trigger", o + "Idx" + a),
                r && e.attr("data-tg-uncheck", r + "Idx" + a)
            }),
                i.each(function() {
                    var e = t(this)
                        , a = e.prev("label").attr("for");
                    e.attr("for", a)
                })
        }
    },
    e.addFieldMethod.init(),
    e.bwUpdateLayerMethod = {
        tgEl: {},
        init: function() {
            var t = e.bwUpdateLayerMethod.tgEl
                , a = e.setOldIE();
            return t.layerURL = I + "/layer/layerBrow.html",
                t.cookieName = "bwlayer",
                t.cookieDays = 1,
                t.openCallback = "feUI.bwUpdateLayerMethod.checkOpen",
                t.closeCallback = "feUI.bwUpdateLayerMethod.checkClose",
            !("1" === e.getCookie(t.cookieName) || !c.is('[lang="ko"]') || !a.isIE || o > 8) && (!(!c.hasClass("mainContent") && !m.hasClass("mainIntroContent")) && void e.layerMethod.loadLayer(t.layerURL, "", t.openCallback, t.closeCallback))
        },
        checkOpen: function() {
            var a = e.bwUpdateLayerMethod.tgEl;
            e.cssPseudoEl(),
                t(".layerBrow01").off("change").on("change", ":checkbox:last", function() {
                    a.cookieDays = t(this).prop("checked") ? 7 : 1
                })
        },
        checkClose: function() {
            var t = e.bwUpdateLayerMethod.tgEl;
            e.createCookie(t.cookieName, 1, t.cookieDays)
        }
    },
    e.bwUpdateLayerMethod.init(),
    l.on({
        resize: function() {
            M !== l.width() && (M = l.width(),
                B = M > S),
            C !== l.height() && (C = l.height(),
                e.layerMethod.lockScroll()),
                e.fixedLayoutMethd.init()
        },
        scroll: function() {
            $ = l.scrollTop(),
                e.fixedLayoutMethd.init()
        }
    })
}(feUI, jQuery, window, document);
